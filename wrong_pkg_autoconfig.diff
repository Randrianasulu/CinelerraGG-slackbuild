diff --git a/cinelerra-5.1/configure.ac b/cinelerra-5.1/configure.ac
index f61ef275..70dee6a4 100644
--- a/cinelerra-5.1/configure.ac
+++ b/cinelerra-5.1/configure.ac
@@ -36,6 +36,12 @@ AC_ARG_WITH([$1],
 AC_SUBST([WANT_$3])
 ])
 
+PKG_PROG_PKG_CONFIG
+PKG_CHECK_MODULES([X11], [x11])
+PKG_CHECK_MODULES([XEXT], [xext])
+PKG_CHECK_MODULES([XINERAMA], [xinerama])
+PKG_CHECK_MODULES([XFIXES], [xfixes])
+
 CHECK_WITH([jobs],[parallel build jobs],[JOBS],[auto])
 CHECK_WITH([exec-name],[binary executable name],[CIN],[cin])
 CHECK_WITH([single-user],[to install cin in bin],[CINBIN_BUILD],[no])
@@ -144,51 +150,51 @@ if test "x$WANT_JOBS" = "xauto"; then
   WANT_JOBS=`expr $CPUS + $CPUS / 2 + 2`
 fi
 
-AC_DEFUN([PKG_DEF],[
-STATIC_PKGS+=" [$1]"
+AC_DEFUN([PKG1_DEF],[
+STATIC_PKG1S+=" [$1]"
 ver_$1="$2"
 lib_$1="$3"
 inc_$1="$4"
 ])
 
-AC_DEFUN([PKG_3RD],[
+AC_DEFUN([PKG1_3RD],[
 AC_ARG_ENABLE([$1],
   AC_HELP_STRING([--enable-$1],[build $1 ($2)]),
-  [PKG_$1=$enableval], [PKG_$1=$2])
-PKG_DEF([$1],[$3],[$4],[$5])
+  [PKG1_$1=$enableval], [PKG1_$1=$2])
+PKG1_DEF([$1],[$3],[$4],[$5])
 ])
 
 # thirdparty builds
 
-PKG_3RD([a52dec],[yes],
+PKG1_3RD([a52dec],[yes],
   [a52dec-0.7.4],
   [ liba52/.libs/liba52.a ],
   [ include ])
 
-PKG_3RD([djbfft],[yes],
+PKG1_3RD([djbfft],[yes],
   [djbfft-0.76],
   [ libdjbfft.a ],
   [ . ])
 
-PKG_3RD([audiofile],[no],
+PKG1_3RD([audiofile],[no],
   [audiofile-0.3.6],
   [ libaudiofile/.libs/libaudiofile.a \
     libaudiofile/modules/.libs/libmodules.a \
     libaudiofile/alac/.libs/libalac.a ],
   [ libaudiofile ])
 
-PKG_3RD([encore],[no],
+PKG1_3RD([encore],[no],
   [encore-5.0],
   [ \$(OBJDIR)/libencore.a ],
   [ . ])
 
-PKG_3RD([esound],[no],
+PKG1_3RD([esound],[no],
   [esound-0.2.41],
   [ .libs/libesd.a \
     .libs/libesddsp.a ],
   [ . ])
 
-PKG_3RD([ffmpeg],[yes],
+PKG1_3RD([ffmpeg],[yes],
   [ffmpeg-4.2],
   [ libavutil/libavutil.a \
     libavcodec/libavcodec.a \
@@ -204,7 +210,7 @@ if test "x$WANT_GIT_FFMPEG" != "xno" ; then
   ver_ffmpeg="ffmpeg.git"
 fi
 
-PKG_3RD([fftw],[auto],
+PKG1_3RD([fftw],[auto],
   [fftw-3.3.8],
   [ .libs/libfftw3.a \
     libbench2/libbench2.a \
@@ -222,7 +228,7 @@ PKG_3RD([fftw],[auto],
     simd-support/.libs/libsimd_support.a ],
   [ api ])
 
-PKG_3RD([flac],[auto],
+PKG1_3RD([flac],[auto],
   [flac-1.3.2],
   [ src/libFLAC/.libs/libFLAC.a \
     src/libFLAC++/.libs/libFLAC++.a \
@@ -233,64 +239,64 @@ PKG_3RD([flac],[auto],
     src/test_libs_common/.libs/libtest_libs_common.a ],
   [ include ])
 
-PKG_3RD([giflib],[yes],
+PKG1_3RD([giflib],[yes],
   [giflib-5.2.1],
   [ libgif.a \
     libutil.a ],
   [ . ])
 
-PKG_DEF([ladspa], [ladspa-0.4.17], [], [])
+PKG1_DEF([ladspa], [ladspa-0.4.17], [], [])
 
-PKG_3RD([lame],[auto],
+PKG1_3RD([lame],[auto],
   [lame-3.100],
   [ libmp3lame/.libs/libmp3lame.a \
     mpglib/.libs/libmpgdecoder.a ],
   [ include ])
 
-PKG_3RD([libavc1394],[auto],
+PKG1_3RD([libavc1394],[auto],
   [libavc1394-0.5.4],
   [ libavc1394/.libs/libavc1394.a \
     librom1394/.libs/librom1394.a \
     common/.libs/libraw1394util.a ],
   [ . ])
 
-PKG_3RD([libraw1394],[auto],
+PKG1_3RD([libraw1394],[auto],
   [libraw1394-2.1.2],
   [ src/.libs/libraw1394.a ],
   [ . ])
 
-PKG_3RD([libiec61883],[auto],
+PKG1_3RD([libiec61883],[auto],
   [libiec61883-1.2.0],
   [ src/.libs/libiec61883.a ],
   [ src ])
 
-PKG_3RD([libdv],[auto],
+PKG1_3RD([libdv],[auto],
   [libdv-1.0.0],
   [ libdv/.libs/libdv.a ],
   [ . ])
 
-PKG_3RD([libjpeg],[auto],
+PKG1_3RD([libjpeg],[auto],
   [libjpeg-turbo-2.0.4],
   [ build/libjpeg.a \
     build/libturbojpeg.a ],
   [ opt/libjpeg-turbo/include ])
 
-PKG_3RD([opus],[auto],
+PKG1_3RD([opus],[auto],
   [opus-1.3.1],
   [ .libs/libopus.a ],
   [ include ])
 
-PKG_3RD([openjpeg],[auto],
+PKG1_3RD([openjpeg],[auto],
   [openjpeg-2.3.1],
   [ bin/libopenjp2.a ],
   [ src/lib/openjp2 ])
 
-PKG_3RD([libogg],[auto],
+PKG1_3RD([libogg],[auto],
   [libogg-1.3.4],
   [ src/.libs/libogg.a ],
   [ include ])
 
-PKG_3RD([libsndfile],[auto],
+PKG1_3RD([libsndfile],[auto],
   [libsndfile-1.0.28],
   [ src/.libs/libsndfile.a \
     src/.libs/libcommon.a \
@@ -298,26 +304,26 @@ PKG_3RD([libsndfile],[auto],
     src/GSM610/.libs/libgsm.a ],
   [ . ])
 
-PKG_3RD([libtheora],[auto],
+PKG1_3RD([libtheora],[auto],
   [libtheora-1.1.1],
   [ lib/.libs/libtheora.a \
     lib/.libs/libtheoradec.a \
     lib/.libs/libtheoraenc.a ],
   [ . ])
 
-PKG_3RD([libuuid],[yes],
+PKG1_3RD([libuuid],[yes],
   [libuuid-1.0.3],
   [ .libs/libuuid.a ],
   [ . ])
 
-PKG_3RD([libvorbis],[auto],
+PKG1_3RD([libvorbis],[auto],
   [libvorbis-1.3.6],
   [ lib/.libs/libvorbis.a \
     lib/.libs/libvorbisenc.a \
     lib/.libs/libvorbisfile.a ],
   [ include . ])
 
-PKG_3RD([mjpegtools],[yes],
+PKG1_3RD([mjpegtools],[yes],
   [mjpegtools-2.1.0],
   [ utils/mmxsse/.libs/libmmxsse.a \
     utils/.libs/libmjpegutils.a \
@@ -328,7 +334,10 @@ PKG_3RD([mjpegtools],[yes],
     mpeg2enc/.libs/libmpeg2encpp.a ],
   [ .  lavtools utils ])
 
-PKG_3RD([openexr],[auto],
+
+
+
+PKG1_3RD([openexr],[auto],
   [openexr-2.4.1],
   [ usr/local/lib/libHalf.a \
     usr/local/lib/libIex.a \
@@ -339,96 +348,96 @@ PKG_3RD([openexr],[auto],
     usr/local/lib/libIlmImfUtil.a ],
   [ usr/local/include/OpenEXR ])
 
-PKG_3RD([openExr],[auto], [openExr], [] [])
-PKG_3RD([ilmBase],[auto], [ilmBase], [] [])
+PKG1_3RD([openExr],[auto], [openExr], [] [])
+PKG1_3RD([ilmBase],[auto], [ilmBase], [] [])
 
-#PKG_3RD([festival],[no],
+#PKG1_3RD([festival],[no],
 #  [festival],
 #  [],
 #  [])
-#PKG_3RD(speech_tools,[no],
+#PKG1_3RD(speech_tools,[no],
 #  [speech_tools],
 #  [],
 #  [])
 #
-PKG_3RD([tiff],[auto],
+PKG1_3RD([tiff],[auto],
   [tiff-4.1.0],
   [ libtiff/.libs/libtiff.a \
     libtiff/.libs/libtiffxx.a \
     port/.libs/libport.a ],[
    . ])
 
-PKG_3RD([twolame],[auto],
+PKG1_3RD([twolame],[auto],
   [twolame-0.4.0],
   [ libtwolame/.libs/libtwolame.a ],
   [  libtwolame ])
 
-PKG_3RD([x264],[auto],
+PKG1_3RD([x264],[auto],
   [x264-snapshot-20191217-2245-stable],
   [ libx264.a ],
   [ . ])
 
-PKG_3RD([x265],[auto],
+PKG1_3RD([x265],[auto],
   [x265_3.2.1],
   [ libx265.a ],
   [ . source ])
 
-PKG_3RD([libvpx],[auto],
+PKG1_3RD([libvpx],[yes],
   [libvpx-1.8.1],
   [ libvpx.a ],
   [ . ])
 
-PKG_3RD([lv2],[auto],
+PKG1_3RD([lv2],[auto],
   [lv2-1.16.0],
   [ ],
   [ usr/local/include usr/local/lib64/lv2 usr/local/lib/lv2 ])
 
-PKG_3RD([sratom],[auto],
+PKG1_3RD([sratom],[auto],
   [sratom-0.6.4],
   [ usr/local/lib/libsratom-0.a ],
   [ usr/local/include ])
 
-PKG_3RD([serd],[auto],
+PKG1_3RD([serd],[auto],
   [serd-0.30.2],
   [ usr/local/lib/libserd-0.a ],
   [ usr/local/include ])
 
-PKG_3RD([sord],[auto],
+PKG1_3RD([sord],[auto],
   [sord-0.16.4],
   [ usr/local/lib/libsord-0.a ],
   [ usr/local/include ])
 
-PKG_3RD([lilv],[auto],
+PKG1_3RD([lilv],[auto],
   [lilv-0.24.6],
   [ usr/local/lib/liblilv-0.a ],
   [ usr/local/include ])
 
-PKG_3RD([suil],[auto],
+PKG1_3RD([suil],[auto],
   [suil-0.10.6],
   [ usr/local/lib/libsuil-0.a ],
   [ usr/local/include ])
 
-PKG_3RD([libaom],[auto],
+PKG1_3RD([libaom],[auto],
   [libaom-v1.0.0],
   [ usr/local/lib*/libaom*.a ],
   [ usr/local/include ])
 
-PKG_3RD([dav1d],[auto],
+PKG1_3RD([dav1d],[auto],
   [dav1d-0.5.1],
   [ usr/local/lib*/libdav1d*.a ],
   [ usr/local/include ])
 
-PKG_3RD([libwebp],[auto],
+PKG1_3RD([libwebp],[auto],
   [libwebp-1.1.0],
   [ usr/local/lib*/libwebp*.a ],
   [ usr/local/include ])
 
-PKG_3RD([ffnvcodec],[auto],
+PKG1_3RD([ffnvcodec],[auto],
   [ffnvcodec],
   [ ],
   [ . ])
 
-AC_SUBST(STATIC_PKGS)
+AC_SUBST(STATIC_PKG1S)
 
 AC_DEFUN([CHECK_ENABLE], [
 AC_ARG_ENABLE([$1],
@@ -459,20 +468,26 @@ I86=[`expr "x$ARCH" : 'xi[346]86.*'`]
 X86=[`expr "x$ARCH" : 'x..._64*'`]
 
 if test "x$I86$X86" != "x00" ; then
+
   # Checks for ix86 programs.
-  REQUIRE_PROG(NASM, [nasm])
+#  REQUIRE_PROG(NASM, [nasm])
   # libx264 nasm fix
-  AC_MSG_CHECKING([nasm x264 compatible])
-  echo "vmovdqa32 [[eax]]{k1}{z}, zmm0" > conftest.asm
-  nasm conftest.asm -o conftest.o > /dev/null 2>&1
-  if test $? != 0 ; then
-   AC_MSG_RESULT([no])
-   AC_MSG_WARN([libx264 built without assembly code])
-   X264_CFG_PARAMS="$X264_CFG_PARAMS --disable-asm"
-  else
-   AC_MSG_RESULT([yes])
-  fi
-  rm -f conftest.asm conftest.o
+#  AC_MSG_CHECKING([nasm x264 compatible])
+#  echo "vmovdqa32 [[eax]]{k1}{z}, zmm0" > conftest.asm
+#  nasm conftest.asm -o conftest.o > /dev/null 2>&1
+#  if test $? != 0 ; then
+#   AC_MSG_RESULT([no])
+#   AC_MSG_WARN([libx264 built without assembly code])
+#   X264_CFG_PARAMS="$X264_CFG_PARAMS --disable-asm"
+#  else
+#   AC_MSG_RESULT([yes])
+#  fi
+#  rm -f conftest.asm conftest.o
+PKG1_3RD([nasm],[yes],
+ [nasm-2.14.02],
+ [ ],
+ [ . ])
+
   REQUIRE_PROG(YASM, [yasm])
 fi
 
@@ -501,26 +516,26 @@ if test "x$HAVE_$1" != "xno"; then
  AC_MSG_CHECKING([$2])
  AC_MSG_RESULT([$HAVE_$1])
  if test "x$HAVE_$1" = "xno"; then
-  if test "x$PKG_$1" = "x"; then RESULT=no; fi
+  if test "x$PKG1_$1" = "x"; then RESULT=no; fi
  fi
 fi
 ])
 
 AC_DEFUN([CHECK_LIB], [
 if test "x$HAVE_$1" != "xno"; then
- if test "x$PKG_$1" = "x" -o "x$WANT_STATIC_BUILD" = "xno" -a "x$PKG_$1" != "xno"; then
+ if test "x$PKG1_$1" = "x" -o "x$WANT_STATIC_BUILD" = "xno" -a "x$PKG1_$1" != "xno"; then
   AC_CHECK_LIB([$2], [$3], [HAVE_$1=yes], [HAVE_$1=no], [$4])
   AC_SUBST([HAVE_$1])
   if test "x$WANT_$1" != "xno"; then
    if test "x$HAVE_$1" = "xyes"; then
-    if test "x$PKG_$1" = "x"; then
+    if test "x$PKG1_$1" = "x"; then
      SYSTEM_LIBS+=" -l[$2]"
      for lib in [$4]; do SYSTEM_LIBS+=" $lib"; done
     else
      SHARED_$1+=" -l[$2]"
      for lib in [$4]; do SHARED_LIBS+=" $lib"; done
     fi
-   elif test "x$PKG_$1" = "x"; then
+   elif test "x$PKG1_$1" = "x"; then
     RESULT=no
    fi
   fi
@@ -528,17 +543,14 @@ if test "x$HAVE_$1" != "xno"; then
 fi
 ])
 
-CHECK_LIB([X11], [X11], [XOpenDisplay])
-CHECK_HEADERS([X11], [X11 headers], [X11/X.h X11/Xlib.h X11/Xutil.h X11/cursorfont.h])
-CHECK_HEADERS([X11], [X11 headers], [X11/keysym.h X11/Sunkeysym.h X11/Xatom.h X11/XF86keysym.h])
-CHECK_LIB([XEXT], [Xext], [XShmQueryExtension])
-CHECK_HEADERS([XEXT], [Xlib XShm extention], [X11/Xlib.h X11/extensions/XShm.h X11/extensions/shape.h])
-CHECK_LIB([XINERAMA], [Xinerama], [XineramaQueryExtension])
-CHECK_HEADERS([XINERAMA], [Xinerama headers], [X11/extensions/Xinerama.h])
-CHECK_LIB([XFIXES], [Xfixes], [XFixesQueryVersion])
+
+
+
 CHECK_LIB([BZ2], [bz2], [BZ2_bzDecompress])
-CHECK_LIB([FONTCONFIG], [fontconfig], [FcInit])
-CHECK_LIB([FREETYPE], [freetype], [FT_Init_FreeType])
+#CHECK_LIB([FONTCONFIG], [fontconfig], [FcInit])
+#CHECK_LIB([FREETYPE], [freetype], [FT_Init_FreeType])
+PKG_CHECK_MODULES([FONTCONFIG], [fontconfig])
+PKG_CHECK_MODULES([FREETYPE], [freetype2])
 CHECK_LIB([LZMA], [lzma], [lzma_version_number])
 CHECK_LIB([PNG], [png], [png_read_png])
 CHECK_LIB([PTHREAD], [pthread], [pthread_create])
@@ -589,21 +601,25 @@ CHECK_LIB([giflib], [gif], [DGifOpen])
 CHECK_HEADERS([giflib], [gif lib headers], [gif_lib.h])
 CHECK_LIB([jbig], [jbig], [jbg_dec_init])
 
-CHECK_LIB([VDPAU], [vdpau], [vdp_device_create_x11])
-if test "x$HAVE_VDPAU" != "xyes" -a "x$WANT_VDPAU" = "xyes"; then
-  AC_MSG_ERROR([requires vdpau support.])
-fi
+PKG_CHECK_MODULES([VDPAU], [vdpau])
+#CHECK_LIB([VDPAU], [vdpau], [vdp_device_create_x11])
+#if test "x$HAVE_VDPAU" != "xyes" -a "x$WANT_VDPAU" = "xyes"; then
+#  AC_MSG_ERROR([requires vdpau support.])
+#fi
 
-CHECK_LIB([VAAPI], [va], [vaInitialize])
-if test "x$HAVE_VAAPI" = "xyes" -a "x$WANT_VAAPI" != "xno"; then
-  CHECK_HEADERS([vaapi_x11], [va x11 headers], [va/va_x11.h])
-  CHECK_LIB([vaapi_x11], [va-x11], [vaGetDisplay])
-  CHECK_HEADERS([vaapi_drm], [va drm headers], [va/va_drm.h])
-  CHECK_LIB([vaapi_drm], [va-drm], [vaGetDisplayDRM])
-fi
-if test "x$HAVE_VAAPI" != "xyes" -a "x$WANT_VAAPI" = "xyes"; then
-  AC_MSG_ERROR([requires vaapi support.])
-fi
+#CHECK_LIB([VAAPI], [va], [vaInitialize])
+#if test "x$HAVE_VAAPI" = "xyes" -a "x$WANT_VAAPI" != "xno"; then
+PKG_CHECK_MODULES([LIBVA], [libva])
+
+#  CHECK_HEADERS([vaapi_x11], [va x11 headers], [va/va_x11.h])
+#  CHECK_LIB([vaapi_x11], [va-x11], [vaGetDisplay])
+#  CHECK_HEADERS([vaapi_drm], [va drm headers], [va/va_drm.h])
+#  CHECK_LIB([vaapi_drm], [va-drm], [vaGetDisplayDRM])
+
+#fi
+#if test "x$HAVE_VAAPI" != "xyes" -a "x$WANT_VAAPI" = "xyes"; then
+#  AC_MSG_ERROR([requires vaapi support.])
+#fi
 
 #CHECK_LIB([NVENC], [nvidia-encode], [NvEncodeAPICreateInstance])
 
@@ -621,7 +637,7 @@ AC_ARG_WITH(m4_tolower([$1]),
  if test "x$WANT_$1" = "xauto" ; then
   WANT_$1="$RESULT"
  elif test "x$WANT_$1" = "xyes" ; then
-  if test "x$RESULT" = "xno" -a "x$PKG_$1" = "x"; then
+  if test "x$RESULT" = "xno" -a "x$PKG1_$1" = "x"; then
     AC_MSG_ERROR([required for $1 support.])
   fi
  fi
@@ -629,21 +645,24 @@ CFG_WANTS+=" $1"
 AC_SUBST([WANT_$1])
 ])
 
-CHECK_WANT([GL], [auto], [use opengl], [
- CHECK_LIB([GL], [GL], [glUseProgram])
- CHECK_LIB([GL], [GLU], [gluOrtho2D])
- CHECK_HEADERS([GL], [opengl headers], [GL/gl.h GL/glext.h GL/glu.h GL/glx.h])])
+#CHECK_WANT([GL], [auto], [use opengl], [
+# CHECK_LIB([GL], [GL], [glUseProgram])
+# CHECK_LIB([GL], [GLU], [gluOrtho2D])
+# CHECK_HEADERS([GL], [opengl headers], [GL/gl.h GL/glext.h GL/glu.h GL/glx.h])])
+PKG_CHECK_MODULES([GL], [gl])
 
-CHECK_WANT([XV], [auto], [use xv], [
- CHECK_LIB([xv], [Xv], [XvQueryExtension])
- CHECK_HEADERS([xv], [Xlib Xv extention], [X11/Xlib.h X11/extensions/Xvlib.h])])
+#CHECK_WANT([XV], [auto], [use xv], [
+PKG_CHECK_MODULES([XV], [xv])
+# CHECK_LIB([xv], [Xv], [XvQueryExtension])
+# CHECK_HEADERS([xv], [Xlib Xv extention], [X11/Xlib.h X11/extensions/Xvlib.h])])
 
 CHECK_WANT([OSS], [auto], [use OSS audio], [
  CHECK_HEADERS([OSS], [oss headers], [sys/soundcard.h])])
 
-CHECK_WANT([XFT], [auto], [use libXft], [
- CHECK_LIB([XFT], [Xft], [XftInit])
- CHECK_HEADERS([XFT], [Xft/freetype headers], [X11/Xlib.h X11/Xft/Xft.h])])
+#CHECK_WANT([XFT], [auto], [use libXft], [
+# CHECK_LIB([XFT], [Xft], [XftInit])
+# CHECK_HEADERS([XFT], [Xft/freetype headers], [X11/Xlib.h X11/Xft/Xft.h])])
+PKG_CHECK_MODULES([XFT], [freetype2])
 
 CHECK_WANT([ALSA], [auto], [use libasound/alsa], [
  CHECK_LIB([ALSA], [asound], [snd_pcm_open])
@@ -824,22 +843,22 @@ AC_SUBST(OBJDIR)
 echo "AC_HELP_STRING([Reason],[Package])"
 echo "AC_HELP_STRING([------],[-------])"
 
-AC_DEFUN([PKG_DISABLED],[
- PKG_$1="no"
+AC_DEFUN([PKG1_DISABLED],[
+ PKG1_$1="no"
  BUILD_$1=0
  AC_SUBST(BUILD_$1)
  echo "AC_HELP_STRING([disabled],[$1])"
 ])
-AC_DEFUN([PKG_SHARED],[
- PKG_$1="shared"
+AC_DEFUN([PKG1_SHARED],[
+ PKG1_$1="shared"
  BUILD_$1=0
  AC_SUBST(BUILD_$1)
  SHARED_LIBS+="$SHARED_$1"
 ])
 
-AC_DEFUN([PKG_STATIC],[
+AC_DEFUN([PKG1_STATIC],[
  if test "x$WANT_CIN_3RDPARTY" != "xno"; then
-  PKG_$1="yes"
+  PKG1_$1="yes"
   BUILD_$1=1
   AC_SUBST(BUILD_$1)
   STATIC_BLDS+=" [$1]"
@@ -847,7 +866,7 @@ AC_DEFUN([PKG_STATIC],[
  fi
 ])
 
-AC_DEFUN([PKG_FORCED],[PKG_STATIC([$1],[forced])])
+AC_DEFUN([PKG1_FORCED],[PKG1_STATIC([$1],[forced])])
 
 if test "x$WANT_CIN_3RDPARTY" != "xno"; then
 # order matters
@@ -858,75 +877,83 @@ for dep in \
         openexr/ilmbase ilmbase/libogg \
         libtheora/libogg libtheora/libvorbis ; do
   lib=`dirname $dep`;  needs=`basename $dep`
-  eval pkg_lib="\$PKG_$lib"
-  if test "x$pkg_lib" != "xno"; then
-    eval "PKG_$needs=yes"
+  eval PKG1_lib="\$PKG1_$lib"
+  if test "x$PKG1_lib" != "xno"; then
+    eval "PKG1_$needs=yes"
   fi
 done
 fi
 
-AC_DEFUN([PKG_PROVIDE],[
+AC_DEFUN([PKG1_PROVIDE],[
 if test "x$BUILD_$1" = "x" ; then
- if test "x$PKG_$1" = "xyes"; then
+ if test "x$PKG1_$1" = "xyes"; then
   if test "x$WANT_CIN_3RDPARTY" = "xno"; then
-    PKG_SHARED([$1])
+    PKG1_SHARED([$1])
   else
-    PKG_FORCED([$1])
+    PKG1_FORCED([$1])
   fi
- elif test "x$2" = "xno" -o "x$PKG_$1" = "xno"; then
-  PKG_DISABLED([$1])
+ elif test "x$2" = "xno" -o "x$PKG1_$1" = "xno"; then
+  PKG1_DISABLED([$1])
  elif test "x$WANT_STATIC_BUILD" = "xyes"; then
-  PKG_STATIC([$1],[static])
+  PKG1_STATIC([$1],[static])
  elif test "x$HAVE_$1" = "xyes"; then
-  PKG_SHARED([$1])
+  PKG1_SHARED([$1])
  else
-  PKG_STATIC([$1],[needed])
+  PKG1_STATIC([$1],[needed])
  fi
 fi
 ])
 
-PKG_PROVIDE([a52dec])
-PKG_PROVIDE([djbfft])
-PKG_PROVIDE([encore])
-PKG_PROVIDE([audiofile],[$WANT_ESOUND])
-PKG_PROVIDE([esound],[$WANT_ESOUND])
-PKG_PROVIDE([ffmpeg])
-PKG_PROVIDE([fftw])
-PKG_PROVIDE([flac])
-PKG_PROVIDE([giflib])
-PKG_PROVIDE([ilmBase], [$WANT_OPENEXR])
-PKG_PROVIDE([ladspa],[$WANT_LADSPA_BUILD])
-PKG_PROVIDE([lame])
-PKG_PROVIDE([libavc1394],[$WANT_FIREWIRE])
-PKG_PROVIDE([libraw1394],[$WANT_FIREWIRE])
-PKG_PROVIDE([libiec61883],[$WANT_FIREWIRE])
-PKG_PROVIDE([libdv],[$WANT_DV])
-PKG_PROVIDE([libjpeg])
-PKG_PROVIDE([libogg])
-PKG_PROVIDE([libsndfile])
-PKG_PROVIDE([libtheora])
-PKG_PROVIDE([libuuid])
-PKG_PROVIDE([libvorbis])
-PKG_PROVIDE([mjpegtools])
-PKG_PROVIDE([libaom])
-PKG_PROVIDE([dav1d])
-PKG_PROVIDE([libwebp])
-PKG_PROVIDE([openExr], [$WANT_OPENEXR])
-PKG_PROVIDE([openexr], [$WANT_OPENEXR])
-PKG_PROVIDE([openjpeg])
-PKG_PROVIDE([tiff])
-PKG_PROVIDE([twolame])
-PKG_PROVIDE([x264])
-PKG_PROVIDE([x265])
-PKG_PROVIDE([libvpx])
-PKG_PROVIDE([opus])
-PKG_PROVIDE([lv2], [$WANT_LV2])
-PKG_PROVIDE([lilv], [$WANT_LV2])
-PKG_PROVIDE([sratom], [$WANT_LV2])
-PKG_PROVIDE([serd], [$WANT_LV2])
-PKG_PROVIDE([sord], [$WANT_LV2])
-PKG_PROVIDE([suil], [$WANT_LV2])
-PKG_PROVIDE([ffnvcodec], [$WANT_NV])
+
+
+PKG1_PROVIDE([a52dec])
+PKG1_PROVIDE([djbfft])
+PKG1_PROVIDE([encore])
+PKG1_PROVIDE([audiofile],[$WANT_ESOUND])
+PKG1_PROVIDE([esound],[$WANT_ESOUND])
+PKG1_PROVIDE([ffmpeg])
+PKG1_PROVIDE([fftw])
+PKG1_PROVIDE([flac])
+PKG1_PROVIDE([giflib])
+PKG1_PROVIDE([ilmBase], [$WANT_OPENEXR])
+PKG1_PROVIDE([ladspa],[$WANT_LADSPA_BUILD])
+PKG1_PROVIDE([lame])
+PKG1_PROVIDE([libavc1394],[$WANT_FIREWIRE])
+PKG1_PROVIDE([libraw1394],[$WANT_FIREWIRE])
+PKG1_PROVIDE([libiec61883],[$WANT_FIREWIRE])
+PKG1_PROVIDE([libdv],[$WANT_DV])
+PKG1_PROVIDE([libjpeg])
+PKG1_PROVIDE([libogg])
+PKG1_PROVIDE([libsndfile])
+PKG1_PROVIDE([libtheora])
+PKG1_PROVIDE([libuuid])
+PKG1_PROVIDE([libvorbis])
+PKG1_PROVIDE([mjpegtools])
+PKG1_PROVIDE([libaom])
+PKG1_PROVIDE([dav1d])
+PKG1_PROVIDE([libwebp])
+if test "x$I86$X86" != "x00" ; then
+PKG1_PROVIDE([nasm])
+fi
+PKG1_PROVIDE([openExr], [$WANT_OPENEXR])
+PKG1_PROVIDE([openexr], [$WANT_OPENEXR])
+PKG1_PROVIDE([openjpeg])
+PKG1_PROVIDE([tiff])
+PKG1_PROVIDE([twolame])
+PKG1_PROVIDE([x264])
+PKG1_PROVIDE([x265])
+PKG1_PROVIDE([libvpx])
+PKG1_PROVIDE([opus])
+PKG1_PROVIDE([lv2], [$WANT_LV2])
+PKG1_PROVIDE([lilv], [$WANT_LV2])
+PKG1_PROVIDE([sratom], [$WANT_LV2])
+PKG1_PROVIDE([serd], [$WANT_LV2])
+PKG1_PROVIDE([sord], [$WANT_LV2])
+PKG1_PROVIDE([suil], [$WANT_LV2])
+PKG1_PROVIDE([ffnvcodec], [$WANT_NV])
+
+
+
 
 if test "x$WANT_LV2" = "xyes"; then
   if test "x$HAVE_lv2" = "xyes" -a "x$BUILD_lilv" = "x0"; then
@@ -980,7 +1007,7 @@ fi
 FFMPEG_EXTRA_LDFLAGS=""
 if test "x$WANT_VAAPI" != "xno" -a "x$HAVE_VAAPI" = "xyes"; then
   FFMPEG_EXTRA_LDFLAGS+=' -lva'
-  EXTRA_LIBS+=' -lva'
+  EXTRA_LIBS+=' -lva -L/usr/X11R7/lib'
   WANT_VAAPI="yes"
   if test "x$HAVE_vaapi_x11" = "xyes"; then
     FFMPEG_EXTRA_LDFLAGS+=' -lva-x11'
@@ -994,6 +1021,8 @@ fi
 CFG_WANTS+=" VAAPI"
 
 if test "x$WANT_VDPAU" != "xno" -a "x$HAVE_VDPAU" = "xyes"; then
+  FFMPEG_EXTRA_LDFLAGS+=' -lvdpau'
+  EXTRA_LIBS+=' -lvdpau -L/usr/X11R7/lib'
   WANT_VDPAU="yes"
 fi
 CFG_WANTS+=" VDPAU"
@@ -1160,34 +1189,34 @@ if test "x$WANT_X265_HIDEPTH" = "xyes" ; then
   X265_CFG_PARAMS="$X265_CFG_PARAMS -DHIGH_BIT_DEPTH:BOOL=ON" # -DMAIN12:BOOL=ON"
 fi
 
-for pkg in $STATIC_PKGS; do
-  eval pkg_lib="\$PKG_$pkg"
-  if test "x$pkg_lib" = "xyes"; then
-    echo "static_pkgs += $pkg"
-  elif test "x$pkg_lib" = "xshared"; then
-    echo "shared_pkgs += $pkg"
+for PKG1 in $STATIC_PKG1S; do
+  eval PKG1_lib="\$PKG1_$PKG1"
+  if test "x$PKG1_lib" = "xyes"; then
+    echo "static_PKG1s += $PKG1"
+  elif test "x$PKG1_lib" = "xshared"; then
+    echo "shared_PKG1s += $PKG1"
   fi
 done
 echo ""
 
-for pkg in $STATIC_BLDS; do
-  echo "static_blds += $pkg"
-  ver_pkg=ver_$pkg
-  echo "$ver_pkg := \$(THIRDPARTY)/${!ver_pkg}"
-  inc_pkg=inc_$pkg
-  echo "$inc_pkg := \\"
-  for inc in ${!inc_pkg}; do
-    echo "  -I\$($ver_pkg)/$inc \\"
+for PKG1 in $STATIC_BLDS; do
+  echo "static_blds += $PKG1"
+  ver_PKG1=ver_$PKG1
+  echo "$ver_PKG1 := \$(THIRDPARTY)/${!ver_PKG1}"
+  inc_PKG1=inc_$PKG1
+  echo "$inc_PKG1 := \\"
+  for inc in ${!inc_PKG1}; do
+    echo "  -I\$($ver_PKG1)/$inc \\"
   done
   echo ""
-  echo "static_incs += \$(inc_$pkg)"
-  lib_pkg=lib_$pkg
-  echo "$lib_pkg := \\"
-  for lib in ${!lib_pkg}; do
-    echo "  \$($ver_pkg)/$lib \\"
+  echo "static_incs += \$(inc_$PKG1)"
+  lib_PKG1=lib_$PKG1
+  echo "$lib_PKG1 := \\"
+  for lib in ${!lib_PKG1}; do
+    echo "  \$($ver_PKG1)/$lib \\"
   done
   echo ""
-  echo "static_libs += \$($lib_pkg)"
+  echo "static_libs += \$($lib_PKG1)"
   echo ""
 done
 echo ""
@@ -1195,7 +1224,7 @@ echo ""
 for lib in $SHARED_LIBS; do echo "shared_libs += $lib"; done
 echo ""
 for lib in $SYSTEM_LIBS; do echo "system_libs += $lib"; done
-echo "export static_pkgs shared_pkgs static_blds shared_libs system_libs"
+echo "export static_PKG1s shared_PKG1s static_blds shared_libs system_libs"
 echo ""
 
 echo "thirdparty_libraries := \$(static_libs) \$(shared_libs)"
@@ -1219,6 +1248,7 @@ echo ""
 echo "export thirdparty_libraries libraries"
 echo "export CFLAGS_ CXXFLAGS_ LDFLAGS_"
 echo "unexport CFLAGS CXXFLAGS LDFLAGS"
+echo "export PATH=`realpath $(echo $PWD)`/thirdparty/nasm-2.14.02:$PATH"
 
 if test "x$HAVE_tiff" = "xyes"; then
   if test "x$HAVE_jbig" != "xyes"; then
